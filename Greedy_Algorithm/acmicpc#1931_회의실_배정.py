"""한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다.
각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자.
단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다.
회의의 시작시간과 끝나는 시간이 같을 수도 있다. 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다."""
# 입력 : 첫째 줄에 회의의 수 N(1 ≤ N ≤ 100,000)이 주어진다.
# 둘째 줄부터 N+1 줄까지 각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작시간과 끝나는 시간이 주어진다.
# 시작 시간과 끝나는 시간은 231-1보다 작거나 같은 자연수 또는 0이다.
# 출력 : 첫째 줄에 최대 사용할 수 있는 회의의 최대 개수를 출력한다.

"""sort시에, x[1] 즉, 회의가 끝나는 시간 뿐 아니라 x[0] 즉 회의 시작시간까지 2차적으로 sort해야하는 이유는 --> 회의가 7시시작 7시 끝 
이와 같은 경우가 있기 때문임. 3->4 와 4->4 의 경우, 두 회의 모두 진행 가능한데, 
2차적으로 x[0]에 대하여 sort하지 않으면, 4->4 회의를 먼저 진행하여, 3->4 회의를 진행 못하게 된다."""
n = int(input())
data = []
for _ in range(n):
    a, b = map(int, input().split())
    data.append((a,b))
# 이 부분이 핵심
data = sorted(data, key = lambda x: (x[1],x[0]))

count = 0
former = 0
for i in data:
    if former <= i[0]:
        count += 1
        former = i[1]
print(count)