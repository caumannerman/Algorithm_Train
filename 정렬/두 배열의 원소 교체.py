""" 두 개의 배열 A와 B가 있다. 두 배열은 N개의 원소로 구성되어 있으며, 배열의 원소는 모두 자연수이다.
최대 K번의 바꾸기 연산을 수행할 수 있다. 바꾸기 연산이란 A와 B의 원소 하나씩을 서로 바꾸는 것이다.
최종 목표는 배열 A의 모든 원소 합이 최대가 되도록 하는 것이다.

N, K 그리고 배열 A, B의 정보가 주어졌을 때, 최대 K번의 바꿔치기를 통해 만들 수 있는 배열 A의 원소 합의 최댓값을 출력하는 프로그램을 만드시오"""

# 첫 쨰 줄에 N,K가 공백으로 구분되어 입력된다. ( 0 <= K <= N )
# 두 번 째 줄에 배열 A의 원소들이 공백으로 구분되어 입력된다.
# 세 번 째 줄에 배열 B의 원소들이 공백으로 구분되어 입력된다. 모든 원소는 10,000,000보다 작은 자연수
# 연산을 통한 배열 A의 모든 원소 합의 최댓값을 출력한다

n, k = map(int, input().split())

a = list(map(int, input().split()))
b = list(map(int, input().split()))

a.sort()
b.sort()
b.reverse()

for i in range(k):
    if b[i] > a[i]:
        a[i], b[i] = b[i], a[i]
    else:
        break


print(sum(a))